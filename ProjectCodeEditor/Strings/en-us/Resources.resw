<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BuiltOnBlock.Text" xml:space="preserve">
    <value>Built on</value>
  </data>
  <data name="CancelText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ClearHistoryItem.Text" xml:space="preserve">
    <value>Clear undo/redo history</value>
  </data>
  <data name="ClearRecentFilesItem.Text" xml:space="preserve">
    <value>Clear recent files</value>
  </data>
  <data name="ClearSelectionItem.Text" xml:space="preserve">
    <value>Clear selection</value>
  </data>
  <data name="CodeSuggestionsPivot.Header" xml:space="preserve">
    <value>Code suggestions</value>
  </data>
  <data name="CopyrightBlock.Text" xml:space="preserve">
    <value>© 2020 JUV Studios. All rights reserved</value>
  </data>
  <data name="DependenciesListBlock.Text" xml:space="preserve">
    <value>Dependencies &amp; references</value>
  </data>
  <data name="DevelopedBlock.Text" xml:space="preserve">
    <value>Developed by Jaiganesh Kumaran</value>
  </data>
  <data name="EditorAutomationEscHelp" xml:space="preserve">
    <value>Press the escape key to focus outside the editor</value>
  </data>
  <data name="EditorSettingsAutoSave.Header" xml:space="preserve">
    <value>Automatically save when you make changes</value>
  </data>
  <data name="EditorSettingsDisableSound.Header" xml:space="preserve">
    <value>Turn off sound effects</value>
  </data>
  <data name="EditorSettingsManageFontsList.Content" xml:space="preserve">
    <value>Manage installed fonts</value>
  </data>
  <data name="FileOpenPathItem.Text" xml:space="preserve">
    <value>Open file location</value>
  </data>
  <data name="FileSaveNotificationContent" xml:space="preserve">
    <value>Saving {0}</value>
  </data>
  <data name="FileSaveNotificationTitle" xml:space="preserve">
    <value>File save</value>
  </data>
  <data name="FileSubItem.Text" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="FindDialog_TextBox.Header" xml:space="preserve">
    <value>What to find?</value>
  </data>
  <data name="FindDialog_TextBox.PlaceholderText" xml:space="preserve">
    <value>Text to find</value>
  </data>
  <data name="FindItem.Text" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="FontOption.Header" xml:space="preserve">
    <value>Font family</value>
  </data>
  <data name="FontSizeOption.Header" xml:space="preserve">
    <value>Font size</value>
  </data>
  <data name="FullScreenOptionOffText" xml:space="preserve">
    <value>Full screen</value>
  </data>
  <data name="FullScreenOptionOnText" xml:space="preserve">
    <value>Exit full screen</value>
  </data>
  <data name="GeneralSettingsDesc.Text" xml:space="preserve">
    <value>General settings for Develop</value>
  </data>
  <data name="GoToDialog.PrimaryButtonText" xml:space="preserve">
    <value>Go!</value>
  </data>
  <data name="GoToLineBox.Header" xml:space="preserve">
    <value>Where to go?</value>
  </data>
  <data name="GoToLineBox.Placeholder" xml:space="preserve">
    <value>Line number</value>
  </data>
  <data name="GoToLineItem.Text" xml:space="preserve">
    <value>Go to line</value>
  </data>
  <data name="HubCaption" xml:space="preserve">
    <value>Welcome!</value>
  </data>
  <data name="HubTitle" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Hub_GettingStarted.Header" xml:space="preserve">
    <value>Getting started</value>
  </data>
  <data name="Hub_RecentFiles.Header" xml:space="preserve">
    <value>Recent files</value>
  </data>
  <data name="NewFileActionDescription" xml:space="preserve">
    <value>Create a new source file</value>
  </data>
  <data name="NewFileActionTitle" xml:space="preserve">
    <value>Create a new file</value>
  </data>
  <data name="NewFileOption.Text" xml:space="preserve">
    <value>New file</value>
  </data>
  <data name="NoCodeSuggestionsBlock.Text" xml:space="preserve">
    <value>Code suggestions aren't available at the current moment</value>
  </data>
  <data name="NoFileOpenDialogContent" xml:space="preserve">
    <value>Sorry, we couldn't open {0}. Please make sure it still exists and is still accessible.</value>
  </data>
  <data name="NoFileOpenDialogTitle" xml:space="preserve">
    <value>Can't open {0}</value>
  </data>
  <data name="OkayText" xml:space="preserve">
    <value>Okay</value>
  </data>
  <data name="OpenFileActionDescription" xml:space="preserve">
    <value>Open source files from this PC</value>
  </data>
  <data name="OpenOption.Label" xml:space="preserve">
    <value>Open files</value>
  </data>
  <data name="PipOptionOffText" xml:space="preserve">
    <value>Compact overlay</value>
  </data>
  <data name="PipOptionOnText" xml:space="preserve">
    <value>Exit compact overlay</value>
  </data>
  <data name="RecentFileAutomation" xml:space="preserve">
    <value>recent file</value>
  </data>
  <data name="RecentFileContextMenuRemoveItem.Text" xml:space="preserve">
    <value>Remove from this list</value>
  </data>
  <data name="RefreshParseBtn.Content" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="SaveAsItem.Label" xml:space="preserve">
    <value>Save a copy</value>
  </data>
  <data name="SaveAsItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Save a copy (Ctrl+Shift+S)</value>
  </data>
  <data name="SaveAsPickerDefaultName" xml:space="preserve">
    <value>Copy of {0}</value>
  </data>
  <data name="SaveBtn.Label" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SaveBtn.ToolTipService.ToolTip" xml:space="preserve">
    <value>Save (Ctrl+S)</value>
  </data>
  <data name="SettingsCaption" xml:space="preserve">
    <value>Customize Develop!</value>
  </data>
  <data name="SettingsHub.Header" xml:space="preserve">
    <value>Preferences</value>
  </data>
  <data name="Settings_About.Header" xml:space="preserve">
    <value>About this application</value>
  </data>
  <data name="Settings_Editor.Header" xml:space="preserve">
    <value>Editor settings</value>
  </data>
  <data name="Settings_General.Header" xml:space="preserve">
    <value>General settings</value>
  </data>
  <data name="ShareAsFileItem.Text" xml:space="preserve">
    <value>Share as file</value>
  </data>
  <data name="ShareAsSelectionItem.Text" xml:space="preserve">
    <value>Share as selection text</value>
  </data>
  <data name="ShareAsTextItem.Text" xml:space="preserve">
    <value>Share as text</value>
  </data>
  <data name="ShareFileCaption" xml:space="preserve">
    <value>{0} will be shared</value>
  </data>
  <data name="ShareFileTitle" xml:space="preserve">
    <value>Sharing {0}</value>
  </data>
  <data name="ShareSelectionCaption" xml:space="preserve">
    <value>Sharing current selection for {0}</value>
  </data>
  <data name="ShareSelectionTitle" xml:space="preserve">
    <value>Sharing current selection</value>
  </data>
  <data name="ShareTextCaption" xml:space="preserve">
    <value>{0} will be shared as text</value>
  </data>
  <data name="ShareTextTitle" xml:space="preserve">
    <value>Sharing {0} as text</value>
  </data>
  <data name="SpecialThanksBlock.Text" xml:space="preserve">
    <value>Special thanks to</value>
  </data>
  <data name="SubscribeHyperlink.Content" xml:space="preserve">
    <value>Subscribe to Jaiganesh Useful Videos</value>
  </data>
  <data name="TabSizeOption.Header" xml:space="preserve">
    <value>Tab size</value>
  </data>
  <data name="TermsOfUseHyperlink.Content" xml:space="preserve">
    <value>JUV Studios terms of use</value>
  </data>
  <data name="TwitterFollowLink.Content" xml:space="preserve">
    <value>Follow us on Twitter</value>
  </data>
  <data name="UnsavedChangesDialog.Content" xml:space="preserve">
    <value>There are unsaved changes in this file. Would you like to save it before closing?</value>
  </data>
  <data name="UnsavedChangesDialog.PrimaryButtonText" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="UnsavedChangesDialog.SecondaryButtonText" xml:space="preserve">
    <value>Don't save</value>
  </data>
  <data name="UnsavedChangesDialog.Title" xml:space="preserve">
    <value>Unsaved changes</value>
  </data>
  <data name="UntitledFileText" xml:space="preserve">
    <value>Untitled</value>
  </data>
  <data name="VersionText" xml:space="preserve">
    <value>Version</value>
  </data>
</root>